@using Application.Core.Entities;
@model IEnumerable<Cliente>

@{
    ViewData["Title"] = "Clientes";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mt-4"><i class="fas fa-users me-2"></i>Clientes</h1>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#clienteModal" onclick="incluirCliente()">
            <i class="fas fa-plus me-1"></i> Novo Cliente
        </button>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-white">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center">
                <h5 class="mb-3 mb-md-0"><i class="fas fa-table me-1"></i> Lista de Clientes</h5>
                <div class="d-flex flex-column flex-md-row gap-3">
                    <div class="input-group" style="min-width: 200px;">
                        <input type="text" id="searchInput" class="form-control" placeholder="Pesquisar...">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table id="clientesTable" class="table table-striped table-hover table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Nome</th>
                            <th>Número</th>
                            <th>Endereço</th>
                            <th class="text-center">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                                <td class="telefone-cell">@Html.DisplayFor(modelItem => item.Numero)</td>
                                <td>@Html.DisplayFor(modelItem => item.Endereco)</td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a href="@($"https://wa.me/55{new string(item.Numero.Where(char.IsDigit).ToArray())}")"
                                           target="_blank"
                                           class="btn btn-sm btn-success"
                                           title="Conversar no WhatsApp">
                                            <i class="fab fa-whatsapp"></i>
                                        </a>
                                        <button onclick="detalhesCliente('@item.Id')"
                                                class="btn btn-sm btn-info" title="Detalhes">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button onclick="confirmDelete('@item.Id')"
                                                class="btn btn-sm btn-danger" title="Excluir">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Cadastro/Edicao de Cliente -->
<div class="modal fade" id="clienteModal" tabindex="-1" aria-labelledby="clienteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalTitle"><i class="fas fa-user-plus me-2"></i>Novo Cliente</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="clienteForm">
                <input type="hidden" id="Id" name="Id" value="">
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="Nome" class="form-label">Nome</label>
                            <input type="text" class="form-control" id="Nome" name="Nome" required>
                            <div class="invalid-feedback">Por favor, informe o nome do cliente.</div>
                        </div>
                        <div class="col-md-6">
                            <label for="Numero" class="form-label">Número</label>
                            <input type="text" class="form-control" id="Numero" name="Numero" required>
                            <div class="invalid-feedback" id="numeroFeedback">Por favor, informe um número de celular válido (11 dígitos)</div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="Endereco" class="form-label">Endereço</label>
                        <input type="text" class="form-control" id="Endereco" name="Endereco" required>
                        <div class="invalid-feedback">Por favor, informe o endereço do cliente.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i> Cancelar
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i> Salvar
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Variável global para controle do modo (novo/editar)
        let modoEdicao = false;

        // Validação do celular no blur (quando sai do campo)
        $('#Numero').on('blur', function() {
            const numero = $(this).val().replace(/\D/g, ''); // Remove não-dígitos
    
            if(numero.length !== 11) {
                $(this).addClass('is-invalid');
                $('#numeroFeedback').show();
                return;
            }
        });

        // Função para novo cliente
        function incluirCliente() {
            modoEdicao = false;
            $('#modalTitle').html('<i class="fas fa-user-plus me-2"></i>Novo Cliente');
            $('#Id').val('');
        }

        // Função para editar cliente
        function detalhesCliente(id) {
            modoEdicao = true;
            $('#modalTitle').html('<i class="fas fa-edit me-2"></i>Editar Cliente');

            $.get('/Cliente/GetClienteById', { id: id }, function(cliente) {
                $('#Id').val(cliente.id);
                $('#Nome').val(cliente.nome);
                $('#Numero').val(cliente.numero);
                $('#Endereco').val(cliente.endereco);

                var modal = new bootstrap.Modal(document.getElementById('clienteModal'));
                modal.show();
            }).fail(function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Erro!',
                    text: 'Não foi possível carregar os dados do cliente.'
                });
            });
        }

        // Função para confirmar exclusão
        function confirmDelete(id) {
            Swal.fire({
                title: 'Tem certeza?',
                text: "Você não poderá reverter isso!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sim, excluir!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Cliente/ExcluirCliente',
                        type: 'DELETE',
                        data: { id: id },
                        success: function (response) {
                            if (response.sucesso) {
                                Swal.fire(
                                    'Excluído!',
                                    response.mensagem,
                                    'success'
                                ).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Erro!',
                                    response.mensagem,
                                    'error'
                                );
                            }
                        }
                    });
                }
            });
        }

        // Pesquisa na tabela
        $(document).ready(function () {
            var table = $('#clientesTable').DataTable({
                "pageLength": 10,
                "lengthMenu": [10, 25, 50, 100],
                "responsive": true,
                "dom": '<"top"<"d-flex justify-content-between align-items-center"lf>>rt<"bottom"<"d-flex justify-content-between align-items-center"ip>><"clear">',
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros",
                    "zeroRecords": "Nenhum registro encontrado",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                    "infoEmpty": "Mostrando 0 a 0 de 0 registros",
                    "infoFiltered": "(filtrado de _MAX_ registros totais)",
                    "paginate": {
                        "first": "Primeira",
                        "last": "Última",
                        "next": "<i class='fas fa-chevron-right'></i>",
                        "previous": "<i class='fas fa-chevron-left'></i>"
                    }
                },
                "drawCallback": function(settings) {
                    formataNumeroTelefone();
                    adaptTableForMobile();
                },
                "initComplete": function(settings, json) {
                    formataNumeroTelefone();
                }
            });

            // Move o seletor de itens por página para o cabeçalho
            $('.dataTables_length').addClass('mb-3');
    
            // Atualiza a pesquisa personalizada para usar a do DataTables
            $('#searchButton').click(function() {
                table.search($('#searchInput').val()).draw();
            });
    
            $('#searchInput').keyup(function() {
                table.search($(this).val()).draw();
            });


            function formataNumeroTelefone() {
                $('.telefone-cell').each(function() {
                    const numero = $(this).text().trim();
                    if (numero.length === 11) {
                        $(this).text(numero.replace(/(\d{2})(\d{5})(\d{4})/, '($1) $2-$3'));
                    } else if (numero.length === 10) {
                        $(this).text(numero.replace(/(\d{2})(\d{4})(\d{4})/, '($1) $2-$3'));
                    }
                });
            }

            $('#searchButton').click(function () {
                searchTable();
            });

            function searchTable() {
                var value = $('#searchInput').val().toLowerCase();
                $('#clientesTable tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            }

            // Validação do formulário no modal
            $('#clienteForm').submit(function (e) {
                e.preventDefault();

                const numero = $('#Numero').val().replace(/\D/g, '');
                if(numero.length !== 11) {
                    $('#Numero').addClass('is-invalid');
                    $('#numeroFeedback').show().text('O celular deve ter 11 dígitos');
                    return;
                }

                var form = this;
                if (!form.checkValidity()) {
                    e.stopPropagation();
                    form.classList.add('was-validated');
                    return;
                }

                if(modoEdicao){
                    var dados = {
                        Id: $('#Id').val(),
                        Nome: $('#Nome').val(),
                        Numero: $('#Numero').val(),
                        Endereco: $('#Endereco').val()
                    };
                }
                else{
                    var dados = {
                        Nome: $('#Nome').val(),
                        Numero: $('#Numero').val(),
                        Endereco: $('#Endereco').val()
                    };
                }
                
                debugger;
                $.ajax({
                    url: '/Cliente/SalvarCliente',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(JSON.stringify(dados)),
                    success: function (response) {
                        if (response.sucesso) {
                            $('#clienteModal').modal('hide');
                            Swal.fire({
                                icon: 'success',
                                title: 'Sucesso!',
                                text: response.mensagem,
                                showConfirmButton: false,
                                timer: 1500
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Erro!',
                                text: response.mensagem
                            });
                        }
                    },
                    error: function(xhr) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro!',
                            text: 'Ocorreu um erro ao tentar salvar o cliente.'
                        });
                    }
                });
            });

            // Resetar o modal quando fechar
            $('#clienteModal').on('hidden.bs.modal', function () {
                $('#clienteForm')[0].reset();
                $('#clienteForm').removeClass('was-validated');
            });
        });

        // Adapta a tabela para mobile
        function adaptTableForMobile() {
            if ($(window).width() < 576) {
                $('#clientesTable td').each(function() {
                    var cellIndex = $(this).index() + 1;
                    var headerText = $('#clientesTable th').eq(cellIndex - 1).text();
                    $(this).attr('data-label', headerText);
                });
            }
        }

        // Executa na carga e no redimensionamento da tela
        $(window).on('load resize', function() {
            adaptTableForMobile();
        });
    </script>
}