@using Application.Core.Entities;
@model IEnumerable<RelatorioVenda>
@{
	ViewData["Title"] = "Relatorios";
}

<div class="chart-container" style="position: relative; height:400px; width:100%">
	<canvas id="produtosMaisVendidosChart"></canvas>
</div>

<div class="chart-container" style="position: relative; height:400px; width:100%">
    <canvas id="produtosMenosVendidosChart"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Produtos Mais Vendidos
        document.addEventListener('DOMContentLoaded', function() {
            fetch('/Relatorio/ProdutosMaisPedidos')
                .then(response => response.json())
                .then(data => {
                    const ctx = document.getElementById('produtosMaisVendidosChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: data.map(item => item.nome),
                            datasets: [{
                                label: 'Produtos Mais Vendidos',
                                data: data.map(item => item.quantidade),
                                backgroundColor: [
                                    'rgba(40, 159, 64, 0.7)',
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return `${context.parsed.y} vendas`;
                                        }
                                    }
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Quantidade Vendida'
                                    }
                                },
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Produtos'
                                    }
                                }
                            }
                        }
                    });
                });
        });

        // Produtos Menos Vendidos
        document.addEventListener('DOMContentLoaded', function() {
            fetch('/Relatorio/ProdutosMenosPedidos')
                .then(response => response.json())
                .then(data => {
                    const ctx = document.getElementById('produtosMenosVendidosChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: data.map(item => item.nome),
                            datasets: [{
                                label: 'Produtos Menos Vendidos',
                                data: data.map(item => item.quantidade),
                                backgroundColor: [
                                    'rgba(159, 40, 64, 0.7)',
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return `${context.parsed.y} vendas`;
                                        }
                                    }
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Quantidade Vendida'
                                    }
                                },
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Produtos'
                                    }
                                }
                            }
                        }
                    });
                });
        });

        // Gráfico de Fluxo Financeiro Mensal
        document.addEventListener('DOMContentLoaded', function() {
            fetch('/Relatorio/FluxoFinanceiroMensal') // Você precisará criar este endpoint no backend
                .then(response => response.json())
                .then(data => {
                    const ctx = document.getElementById('fluxoFinanceiroChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: data.map(item => item.mes), // Supondo que o backend retorne os meses
                            datasets: [
                                {
                                    label: 'Pagamentos Imediatos',
                                    data: data.map(item => item.pagamentosImediatos),
                                    borderColor: 'rgba(40, 159, 64, 0.8)', // Verde para pagamentos bons
                                    backgroundColor: 'rgba(40, 159, 64, 0.1)',
                                    tension: 0.3,
                                    fill: true
                                },
                                {
                                    label: 'Dívidas Pagas em Dia',
                                    data: data.map(item => item.dividasEmDia),
                                    borderColor: 'rgba(54, 162, 235, 0.8)', // Azul para situações normais
                                    backgroundColor: 'rgba(54, 162, 235, 0.1)',
                                    tension: 0.3,
                                    fill: true
                                },
                                {
                                    label: 'Dívidas Pagas com Atraso',
                                    data: data.map(item => item.dividasAtrasadas),
                                    borderColor: 'rgba(255, 206, 86, 0.8)', // Amarelo para alertas
                                    backgroundColor: 'rgba(255, 206, 86, 0.1)',
                                    tension: 0.3,
                                    fill: true
                                },
                                {
                                    label: 'Calotes (Perdas)',
                                    data: data.map(item => item.calotes),
                                    borderColor: 'rgba(255, 99, 132, 0.8)', // Vermelho para problemas
                                    backgroundColor: 'rgba(255, 99, 132, 0.1)',
                                    tension: 0.3,
                                    fill: true
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return `${context.dataset.label}: R$ ${context.parsed.y.toFixed(2)}`;
                                        }
                                    }
                                },
                                title: {
                                    display: true,
                                    text: 'Fluxo Financeiro Mensal'
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Valor (R$)'
                                    },
                                    ticks: {
                                        callback: function(value) {
                                            return 'R$ ' + value.toFixed(2);
                                        }
                                    }
                                },
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Meses'
                                    }
                                }
                            }
                        }
                    });
                });
        });
    </script>
}