@using Application.Core.Entities;
@model IEnumerable<Pedido>

@{
    ViewData["Title"] = "Pedidos";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mt-4"><i class="fas fa-book me-2"></i>Pedidos</h1>
        <a asp-action="Detalhes" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Novo Pedido
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-white">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center">
                <h5 class="mb-3 mb-md-0"><i class="fas fa-table me-1"></i> Lista de Pedidos</h5>
                <div class="d-flex flex-column flex-md-row gap-3">
                    <div class="input-group" style="min-width: 200px;">
                        <input type="text" id="searchInput" class="form-control" placeholder="Pesquisar...">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table id="pedidosTable" class="table table-striped table-hover table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Cliente</th>
                            <th>Quantidade Total</th>
                            <th>Valor Total</th>
                            <th>Status</th>
                            <th class="text-center">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Cliente.Nome)</td>
                                <td>@Html.DisplayFor(modelItem => item.Quantidade)</td>
                                <td>@item.Valor.ToString("C")</td>
                                <td>
                                    @if (item.Pago == Pedido.PedidoStatus.Pago)
                                    {
                                        <span class="badge bg-success">Pago</span>
                                    }
                                    else if (item.Pago == Pedido.PedidoStatus.Pendente)
                                    {
                                        <span class="badge bg-warning">Pendente</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Perdido</span>
                                    }
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Detalhes" asp-route-id="@item.Id"
                                           class="btn btn-sm btn-info" title="Detalhes">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button onclick="confirmDelete('@item.Id')"
                                                class="btn btn-sm btn-danger" title="Excluir">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Função para confirmar exclusão
        function confirmDelete(id) {
            Swal.fire({
                title: 'Tem certeza?',
                text: "Você não poderá reverter isso!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sim, excluir!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Pedido/ExcluirPedido',
                        type: 'POST',
                        data: { Id: id },
                        success: function (response) {
                            if (response.sucesso) {
                                Swal.fire(
                                    'Excluído!',
                                    response.mensagem,
                                    'success'
                                ).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Erro!',
                                    response.mensagem,
                                    'error'
                                );
                            }
                        }
                    });
                }
            });
        }

        $(document).ready(function () {
            function adaptTableForMobile() {
                if ($(window).width() < 576) {
                    $('#pedidosTable td').each(function() {
                        var cellIndex = $(this).index() + 1;
                        var headerText = $('#pedidosTable th').eq(cellIndex - 1).text();
                        $(this).attr('data-label', headerText);
                    });
                }
            }

            var table = $('#pedidosTable').DataTable({
                "pageLength": 10,
                "lengthMenu": [10, 25, 50, 100],
                "responsive": true,
                "dom": '<"top"<"d-flex justify-content-between align-items-center"lf>>rt<"bottom"<"d-flex justify-content-between align-items-center"ip>><"clear">',
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros",
                    "zeroRecords": "Nenhum registro encontrado",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                    "infoEmpty": "Mostrando 0 a 0 de 0 registros",
                    "infoFiltered": "(filtrado de _MAX_ registros totais)",
                    "paginate": {
                        "first": "Primeira",
                        "last": "Última",
                        "next": "<i class='fas fa-chevron-right'></i>",
                        "previous": "<i class='fas fa-chevron-left'></i>"
                    }
                },
                "drawCallback": function() {
                    adaptTableForMobile();
                }
            });

            // Move o seletor de itens por página para o cabeçalho
            $('.dataTables_length').addClass('mb-3');

            // Atualiza a pesquisa personalizada para usar a do DataTables
            $('#searchButton').click(function() {
                table.search($('#searchInput').val()).draw();
            });

            $('#searchInput').keyup(function() {
                table.search($(this).val()).draw();
            });

            // Executa na carga e no redimensionamento da tela
            $(window).on('load resize', function() {
                adaptTableForMobile();
            });
        });
    </script>
}