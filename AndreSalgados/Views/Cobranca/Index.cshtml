@using Application.Core.Entities;
@model IEnumerable<Cobranca>

@{
    ViewData["Title"] = "Cobranças";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mt-4"><i class="fas fa-dollar-sign me-2"></i>Cobranças</h1>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-white">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-table me-1"></i> Lista de Cobranças</h5>
                <div class="input-group" style="width: 300px;">
                    <input type="text" id="searchInput" class="form-control" placeholder="Pesquisar...">
                    <button class="btn btn-outline-secondary" type="button" id="searchButton">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="clientesTable" class="table table-striped table-hover table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Cliente</th>
                            <th>Valor Total</th>
                            <th>Data Cobrança</th>
                            <th>Status</th>
                            <th class="text-center">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Cliente.Nome)</td>
                                <td>@Html.DisplayFor(modelItem => item.Valor)</td>
                                <td>@Html.DisplayFor(modelItem => item.DataCobranca)</td>
                                <td>
                                    @if (item.CobrancaPerdida)
                                    {
                                        <span class="badge bg-danger">Perdida</span>
                                    }
                                    else if (!item.DataCobranca.HasValue)
                                    {
                                        <span class="badge bg-warning">Aberta</span>
                                    }
                                    else if (item.DataCobranca.Value.Date > DateTime.Today)
                                    {
                                        <span class="badge bg-primary">Agendada</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Vencida</span>
                                    }
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <button onclick="mostrarCalendario('@item.Id')"
                                                class="btn btn-sm btn-info" title="Setar Data Cobrança">
                                            <i class="fas fa-calendar"></i> Definir Data
                                        </button>
                                        <button onclick="marcarComoPerdida('@item.Id')"
                                                class="btn btn-sm btn-danger" title="Cobrança Perdida">
                                            <i class="fas fa-x"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal do Calendário -->
<div class="modal fade" id="calendarioModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Selecione a Data</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="calendar"></div>
                <input type="hidden" id="cobrancaId" value="">
            </div>
            <div class="modal-footer d-flex justify-content-end">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary ms-2" onclick="definirDataCobranca()">Confirmar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Variáveis globais
        let calendar;
        let cobrancaIdAtual = '';

        // Função para mostrar o calendário
        function mostrarCalendario(id) {
            cobrancaIdAtual = id;
            $('#cobrancaId').val(id);

            // Inicializa o calendário se ainda não existir
            if (!calendar) {
                const calendarEl = document.getElementById('calendar');

                calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    locale: 'pt-br',
                    headerToolbar: {
                        left: 'prev',
                        center: 'title',
                        right: 'next'
                    },
                    dateClick: function(info) {
                        // Limpa seleções anteriores
                        $('.fc-day').removeClass('fc-day-selected');
                        // Marca o dia selecionado
                        $(info.dayEl).addClass('fc-day-selected');
                        $('#calendarioModal .modal-footer').show();
                    },
                    dayCellClassNames: 'fc-day-selectable'
                });

                calendar.render();
            }

            // Mostra o modal
            const modal = new bootstrap.Modal(document.getElementById('calendarioModal'));
            modal.show();

            // Esconde o footer inicialmente
            $('#calendarioModal .modal-footer').hide();
        }

        // Função para definir a data de cobrança
        function definirDataCobranca() {
            const selectedDate = $('.fc-day-selected').attr('data-date');

            if (!selectedDate) {
                Swal.fire('Atenção', 'Selecione uma data no calendário', 'warning');
                return;
            }

            $.post('/Cobranca/DefinirDataCobranca', {
                id: cobrancaIdAtual,
                dataCobranca: selectedDate
            }, function(response) {
                if (response.sucesso) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Sucesso!',
                        text: 'Data de cobrança definida com sucesso',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Erro', response.mensagem, 'error');
                }
            });
        }

        // Função para marcar cobrança como perdida
        function marcarComoPerdida(id) {
            Swal.fire({
                title: 'Confirmar ação',
                text: "Deseja marcar esta cobrança como perdida?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sim, marcar como perdida',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('/Cobranca/MarcarComoPerdida', { id: id }, function(response) {
                        if (response.sucesso) {
                            Swal.fire(
                                'Sucesso!',
                                'Cobrança marcada como perdida',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Erro!',
                                response.mensagem,
                                'error'
                            );
                        }
                    });
                }
            });
        }

        // Pesquisa na tabela
        $(document).ready(function () {
            $('#searchButton').click(searchTable);
            $('#searchInput').keyup(searchTable);

            function searchTable() {
                const value = $('#searchInput').val().toLowerCase();
                $('#cobrancasTable tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().includes(value));
                });
            }
        });
    </script>
}