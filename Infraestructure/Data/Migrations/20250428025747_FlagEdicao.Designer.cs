// <auto-generated />
using System;
using Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Data.Migrations
{
    [DbContext(typeof(VrContext))]
    [Migration("20250428025747_FlagEdicao")]
    partial class FlagEdicao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application.Core.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<DateTime>("Alteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTECLIENTE");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVCLIENTE");

                    b.Property<int?>("CodigoExterno")
                        .HasColumnType("int")
                        .HasColumnName("IE_CODICLIENTE");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GN_ENDECLIE");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INCLCLIENTE");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NM_NOMECLIE");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NR_NUMECLIE");

                    b.HasKey("Id");

                    b.ToTable("VR_CLIENTE");
                });

            modelBuilder.Entity("Application.Core.Entities.Cobranca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_COBRANCA");

                    b.Property<DateTime>("Alteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTECOBRANCA");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVCOBRANCA");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_CLIE");

                    b.Property<bool>("CobrancaPerdida")
                        .HasColumnType("bit")
                        .HasColumnName("FL_COBRPERD");

                    b.Property<int?>("CodigoExterno")
                        .HasColumnType("int")
                        .HasColumnName("IE_CODICOBRANCA");

                    b.Property<DateTime>("DataCobranca")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_DATACOBR");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NR_VALODESC");

                    b.Property<bool>("DescontoPorcento")
                        .HasColumnType("bit")
                        .HasColumnName("FL_DESCPORC");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INCLCOBRANCA");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NR_VALOCOBR");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("VR_COBRANCA");
                });

            modelBuilder.Entity("Application.Core.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<DateTime>("Alteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTEPEDIDO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVPEDIDO");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_CLIE");

                    b.Property<Guid?>("CobrancaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_COBR");

                    b.Property<int?>("CodigoExterno")
                        .HasColumnType("int")
                        .HasColumnName("IE_CODIPEDIDO");

                    b.Property<bool>("Edicao")
                        .HasColumnType("bit")
                        .HasColumnName("FL_EDITPEDI");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INCLPEDIDO");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit")
                        .HasColumnName("FL_PEDIPAGO");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("NR_QUANPEDI");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NR_VALOPEDI");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CobrancaId");

                    b.ToTable("VR_PEDIDO");
                });

            modelBuilder.Entity("Application.Core.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<DateTime>("Alteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTEPRODUTO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVPRODUTO");

                    b.Property<int?>("CodigoExterno")
                        .HasColumnType("int")
                        .HasColumnName("IE_CODIPRODUTO");

                    b.Property<string>("Descricao1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NM_NOMEPROD");

                    b.Property<string>("Descricao2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GN_DESCPROD");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INCLPRODUTO");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NR_PRECPROD");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("NR_QUANPROD");

                    b.Property<Guid?>("TipoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_TIPO");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("VR_PRODUTO");
                });

            modelBuilder.Entity("Application.Core.Entities.ProdutoPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PRODUTOPEDIDO");

                    b.Property<DateTime>("Alteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTEPRODUTOPEDIDO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVPRODUTOPEDIDO");

                    b.Property<int?>("CodigoExterno")
                        .HasColumnType("int")
                        .HasColumnName("IE_CODIPRODUTOPEDIDO");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INCLPRODUTOPEDIDO");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PEDI");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PROD");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("NR_QUANPEDIPROD");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NR_VALOPEDIPROD");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("VR_PRODUTO_PEDIDO");
                });

            modelBuilder.Entity("Application.Core.Entities.RelatorioVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_VENDASRELATORIO");

                    b.Property<DateTime>("Alteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTEVENDASRELATORIO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVVENDASRELATORIO");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_CLIE");

                    b.Property<int?>("CodigoExterno")
                        .HasColumnType("int")
                        .HasColumnName("IE_CODIVENDASRELATORIO");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INCLVENDASRELATORIO");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NR_VALOVEND");

                    b.Property<bool>("VendaGanha")
                        .HasColumnType("bit")
                        .HasColumnName("FL_VENDGANH");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("VR_VENDAS_RELATORIO");
                });

            modelBuilder.Entity("Application.Core.Entities.TipoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_PRODUTOTIPO");

                    b.Property<DateTime>("Alteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTEPRODUTOTIPO");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("FL_ATIVPRODUTOTIPO");

                    b.Property<int?>("CodigoExterno")
                        .HasColumnType("int")
                        .HasColumnName("IE_CODIPRODUTOTIPO");

                    b.Property<DateTime>("Inclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_INCLPRODUTOTIPO");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NM_TIPO");

                    b.HasKey("Id");

                    b.ToTable("VR_PRODUTO_TIPO");
                });

            modelBuilder.Entity("Application.Core.Entities.Cobranca", b =>
                {
                    b.HasOne("Application.Core.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Application.Core.Entities.Pedido", b =>
                {
                    b.HasOne("Application.Core.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Application.Core.Entities.Cobranca", "Cobranca")
                        .WithMany()
                        .HasForeignKey("CobrancaId");

                    b.Navigation("Cliente");

                    b.Navigation("Cobranca");
                });

            modelBuilder.Entity("Application.Core.Entities.Produto", b =>
                {
                    b.HasOne("Application.Core.Entities.TipoProduto", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Application.Core.Entities.ProdutoPedido", b =>
                {
                    b.HasOne("Application.Core.Entities.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Application.Core.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Application.Core.Entities.RelatorioVenda", b =>
                {
                    b.HasOne("Application.Core.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
